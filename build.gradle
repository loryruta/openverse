import java.nio.file.Paths

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        jcenter()
    }
    dependencies {
        classpath "io.franzbecker:gradle-lombok:1.10"
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.1'
    }
}

allprojects  {
    apply plugin: 'maven'

    group = 'xyz.upperlevel.openverse'
    version = '0.1'
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'io.franzbecker.gradle-lombok'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    shadowJar {
        baseName = project.name
        classifier = null
        version = null
    }
    project.tasks.assemble.dependsOn project.tasks.shadowJar

    repositories {
        mavenLocal()
        jcenter()
    }
  
    dependencies {
        compile group: 'org.yaml', name: 'snakeyaml', version: '1.17'
        compile group: 'org.jline', name: 'jline', version: '3.4.0'
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }
}

apply plugin: 'distribution'

distributions {
    game {
        baseName = 'game'
        contents {
            from { project(':openverse-launcher').tasks.shadowJar }
            rename 'openverse-launcher.jar', 'launcher.jar'
            from { project(':openverse-launcher').uri('src/main/dist') }
            into('client') {
                from { project('openverse-client').tasks.shadowJar }
                into('resources') {
                    from { project('openverse-client').uri('src/main/resources') }
                }
            }

            into('server') {
                from { project('openverse-server').tasks.shadowJar }
                into('resources') {
                    from { project('openverse-client').uri('src/main/resources') }
                }
            }
        }
    }
}

def targetFile
if (!project.hasProperty('target')) {
    targetFile = file(project.buildDir.toPath().resolve('game'))
} else {
    targetFile = file(target)
}

installGameDist.setDestinationDir(targetFile)

// Setup task order (setup must be runned after installGameDist)
tasks.getByPath(':openverse-launcher:setup').dependsOn(':installGameDist')
// Set runGame's workingDir
tasks.getByPath(':openverse-launcher:runGame').workingDir = installGameDist.destinationDir
