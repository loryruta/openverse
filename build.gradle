
plugins {
    id 'com.github.johnrengelman.shadow' version '7.0.0'
}

allprojects  {
    group = 'xyz.upperlevel.openverse'
    version = '0.1'
}

project.ext.set("openverseOutDir", project.buildDir.toPath().resolve("game"))

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'
    apply plugin: 'com.github.johnrengelman.shadow'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    // shadowJar final name must be in the form (for example) openverse-launcher.jar
    // and not openverse-launcher-1.0-all.jar
    shadowJar {
        archiveBaseName.set(project.name)
        archiveVersion.set("")
        //archiveExtension.set("")
        archiveClassifier.set("")
    }

    tasks.jar.enabled = false // We only want the shadowJar

    project.tasks.assemble.dependsOn project.tasks.shadowJar

    repositories {
        mavenLocal()
        mavenCentral()
    }
  
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.20'
        annotationProcessor 'org.projectlombok:lombok:1.18.20'

        testCompileOnly 'org.projectlombok:lombok:1.18.20'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.20'

        api group: 'org.yaml', name: 'snakeyaml', version: '1.17'

        testCompileClasspath group: 'junit', name: 'junit', version: '4.12'
    }
}

apply plugin: 'distribution'

distributions {
    game {
        distributionBaseName.set("game")

        contents {
            // openverse-launcher
            from { project(':openverse-launcher').tasks.shadowJar }
            rename 'openverse-launcher(.*)\\.jar', 'launcher.jar'

            from {
                project(':openverse-launcher').uri('src/main/dist')
            }

            // openverse-client
            into('client') {
                from { project(':openverse-client').tasks.shadowJar }
                rename 'openverse-client(.*)\\.jar', 'openverse-client.jar'

                into('resources') {
                    from { project(':openverse-client').uri('src/main/resources') }
                }
            }

            // openverse-server
            into('server') {
                from { project(':openverse-server').tasks.shadowJar }
                rename 'openverse-server(.*)\\.jar', 'openverse-server.jar'
            }
        }
    }
}

// Changes the libs directory: the directory where output JARs will be stored (using the java plugin).

project(':openverse-client') { client ->
    client.libsDirName = project.openverseOutDir.resolve('client')
}

project(':openverse-server') { server ->
    server.libsDirName = project.openverseOutDir.resolve('server')
}

project(':openverse-launcher') { launcher ->
    launcher.libsDirName = project.openverseOutDir
}
